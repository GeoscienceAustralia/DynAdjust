name: Build, test and code coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    #runs-on: ubuntu-18.04 # bionic
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    # Instal system dependencies using apt
    - name: Install system dependencies and prerequisites
      run: |
        pip install --user cpp-coveralls codecov
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends lcov bzip2 wget cmake make g++ xsdcxx libxerces-c-dev
        sudo apt-get install -y --no-install-recommends libboost-system-dev libboost-filesystem-dev libboost-timer-dev libboost-thread-dev libboost-program-options-dev
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt install intel-oneapi-compiler-dpcpp-cpp intel-oneapi-mkl-devel intel-oneapi-tbb-devel
    
    # Build and test using shell script
    - name: Build and test
      run: |
        chmod +x ./resources/make_dynadjust_gcc.sh
        ./resources/make_dynadjust_gcc.sh --no-install --auto --no-clone --test
    
    # Submit to coveralls
    - name: Submit coverage to Coveralls
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: ./dynadjust/build_gcc/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}

